# Recipe used to publish this package to Anaconda and Conda Forge
#
# Credits:
#   - https://github.com/conda-forge/staged-recipes
#   - https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html

{% set data = load_setup_py_data(setup_file='../setup.py', from_recipe_dir=True) %}
{% set name = data['name']  %}
{% set version = data['version']  %}
{% set author = "rnag" %}
{% set repo_url = data['url']  %}
{% set description = data['description']  %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 1a870882a8ff19e7ab9ede7b672b2f7c1ce8d69bbd2fc6d9629da749227268fd
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge`

build:
  number: 0
  entry_points:
    - wiz={{ name|replace('-', '_') }}.wizard_cli.cli:main
  script: {{ PYTHON }} -m pip install . -vv
  noarch: generic
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  skip: True  # [py<36]

requirements:
  host:
    - python
    - pip
  run:
    - python
    - backports-datetime-fromisoformat ==1.0.0  # [py==36]
    - dataclasses  # [py==36]
    - typing-extensions >=3.7.4.2  # [py<=39]

test:
  imports:
    - {{ name|replace('-', '_') }}
  requires:
    - pip
    # - pytest
  commands:
    - pip check
    - wiz --help
    # - pytest -v

about:
  home: {{ repo_url }}
  # See https://spdx.org/licenses/
  license: Apache-2.0
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: Apache
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE
  summary: Marshal dataclasses to/from JSON. Use field properties with initial values. Construct a dataclass schema with JSON input.
  # The remaining entries in this section are optional, but recommended.
  description: |
    The dataclass-wizard library provides a set of simple, yet
    elegant *wizarding* tools for interacting with the Python
    `dataclasses` module in Python 3.6+.

    The primary use is as a fast serialization framework that enables
    dataclass instances to be converted to/from JSON; this works well
    in particular with a *nested dataclass* model.

    The dataclass-wizard is pure Python code that relies entirely on
    stdlib, with the only added dependency being
    `typing-extensions` <https://pypi.org/project/typing-extensions/>
    for Python 3.9 and below.
  doc_url: https://{{ name }}.readthedocs.io/
  dev_url: {{ repo_url }}

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - {{ author }}
